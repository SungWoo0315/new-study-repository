■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<1> Javascript 가 뭡니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
●HTML 언어에 부가되어 웹페이지를 좀 더 동적이고 다양하게 제작할 수 있는 기법을 제공하는 스크립트 언어의 일종이다.
●현재 대부분의 웹브라우저에서 자바스크립트 코딩을 읽어 기능을 구현하는 [JAVA SCRIPT 엔진]이 탑재되어 있다.
    ▶<참고> V8 => 구글의 크롬 브라우저와 안드로이드 브라우저에 탑재된 자바스크립트 엔진 이름이다.
-----------------------------------
●<참고>스크립트 언어의 특징
-----------------------------------
    ▶혼자 실행되지 못하고 다른 언어에 포함되어 실행된다.
    ▶스크립트 언어 종류 => JSP, ASP, PHP 등  


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<2> Javascript 기능이 뭡니까? (입)
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
●입력 양식에 입력/선택된 데이터에 대한 검증을 한다. (=유효성 체크)  
●태그의 속성값을 입력/수정/삭제 하거나 태그 자체의 입력/삭제 작업을 한다. 태그 컨트롤을 할 수 있다.  
    <참고>태그 컨트롤은 자스보다는 JQuery 를 사용하는게 좋다.
●AJAX를 통하여 웹 서버와의 데이터 통신을 한다.
    ------------------------------------------------------
    ▶ AJAX => 비동기 방식으로 웹서버와 통신한 후 통신 결과물을 현 화면에 반영하는데 사용되는 기술들을 총칭한다.
              [XMLHttpRequest 객체/DOM/자바스크립트/CSS] 기술들을 총칭한다.
    ------------------------------------------------------          
    ▶ 비동기 방식 => 페이지 이동 없이 웹서버와 통신하는 방식을 말한다.
                     <예>네이버에서 키워드 입력하면 관련 검색어가 하단에 붙는 것.
                     <예>네이버 지도에서 지도를 밀면 새로운 지도가 나오는 것.
    ------------------------------------------------------
    ▶ 동기 방식 => 페이지가 이동하면서 웹서버와 통신하는 방식을 말한다. 

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<3> Javascript 장점이 뭡니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-------------------------------------------------------------------------------------------------
●Server 에서 Client쪽으로 전달되어 실행이 되므로 ●Server 에 부담을 주지 않는다.
-------------------------------------------------------------------------------------------------
●변수, 연산자, 조건문, 반복문, 함수, 객체 등을 사용하여 프로그래밍의 수준에서 처리할 수 있게 한다.
-------------------------------------------------------------------------------------------------
●AJAX 기술을 사용하여 간접 DB 연동이 가능하다.
-------------------------------------------------------------------------------------------------
●문법이 자바나 C보다 간단하여 학습이 쉽다. <예>모든 변수의 형식 검사를 하지 않음 등.
-------------------------------------------------------------------------------------------------
●[보안성], [소스 중요성]이 없는 역할은 Javascript 가 담당하고, 반대인 경우는 서버 쪽 프로그래밍 언어가 담당한다.
-------------------------------------------------------------------------------------------------
●모바일 분야에서도 활용된다.

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<4> Javascript 단점이 뭡니까? 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
●HTML 소스코드 안에 포함되어 있기 때문에 소스가 노출된다. 즉, 클라이언트가 JAVA SCRIPT 소스를 볼 수 있다.
●JAVA, C언어 같은 강력한 기능의 프로그램을 만들 수 없다.


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<5> Javascript 를 부르는 다른 이름이 있다는데 뭡니까? 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	JavaScript               -> Mozilla Firefox,Google Chrome,Apple Safari, Adobe Acrobat
	Internet Explorer        -> JScript
	Opera                    -> ECMAScript
	.NET                     -> JScript.NET
	Adobe Flash & Adobe Flex -> ActionScript


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<6> Javascript 는 HTML 안에서 어디에 삽입됩니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
script 태그 안에 삽입된다.
-------------------------
<script>
    자바스크립트 코드;
</script>
-------------------------
<script>~</script> 의 위치는 자스안에 함수가 있다면 head 태그 안에 위치시키고,
                            자스안에 함수가 없다면 원하는 실행 위치에 삽입한다.


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<7> 2개 이상의 html 안에서 동일한 자바스크립트(Javascript)코드를 자주 사용할 경우 자바스크립트 코드의 유지보수가 힘들다.
    즉, 자스코드가 변경되면 모든 html 을 열어서 자스코드를 수정해야 한다.
    해결책은?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    자스코드를 xxx.js 파일에 저장하고 각 html 에서 아래 처럼 수입하면 된다.
    -------------------------------------
    <script src = "xxx.js"></script>
    -------------------------------------
        xxx.js 파일안의 모든 자스 코드를 script 안에 삽입하라

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<8> 자바스크립트(Javascript)는 프로그래밍 언어이다. 자스에서 자료형(=데이터의 종류 =data type)의 종류가 뭡니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ------------------------------------
    (1) 숫자형
    ------------------------------------
        ▶정수, 실수 데이터를 말한다.
    ------------------------------------
    (2) 문자형
    ------------------------------------
        ▶문자 데이터를 말한다.
        ▶" 로 감싼다. <참고> ' 로 감싸도 되지만 되도록 " 로 감싼다.
        ▶"" 또는 '' 는 길이가 없는 문자 데이터 이다.
    ------------------------------------
    (3) boolean형
    ------------------------------------
        ▶true 또는 false 데이터를 말한다. 진실이냐 거짓이냐 를 표현한다.
    ------------------------------------
    (4) 함수형
    ------------------------------------
        ▶function(매개변수){ 실행구문; } 의 형태 데이터를 말한다.
        ▶function(매개변수){ 실행구문; } 의 형태를 익명함수라고 부른다.
        ▶<예> var doubleNum = function(num){ return num*num; } 의 형태 데이터를 말한다.
        
    ------------------------------------
    (5) 객체형
    ------------------------------------
        ▶객체가 차지하는 메모리 공간의 위치 주소값을 말한다. (=메위주)
        ▶객체가 차지하는 메모리 공간의 위치 주소값을 알면 객체가 소유한 속성변수나 메소드를 호출할 수 있다.
          객체 생성의 목적은 메소드나 속성변수 호출이다.
    ------------------------------------
    (6) undefined 형
    ------------------------------------
        ▶알 수 없는 데이터를 말한다. 즉, 프로그램에서 사용할 수 없는 데이터를 말한다.
        ▶위 5가지 자료형 이외의 자료형을 말한다.
        ▶"나도 몰라 데이터"

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<9> 자바스크립트(Javascript)에서 변수 선언은 어떻게 합니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

-------------------------------------------------------------------
변수 정의 => 데이터가 저장되는 [메모리의 기억장소]에 붙인 이름을 말한다.
            <비유>음식을 담는 그릇과 동일한 개념이다.
-------------------------------------------------------------------
변수 사용 이유 => 데이터를 변수에 저장함으로써 재사용이 가능하다.
                 데이터를 변수에 저장하지 않으면 데이터 재사용할 수 없다.
-------------------------------------------------------------------
변수 선언 형식 => var 변수명 = 데이터;
-------------------------------------------------------------------
변수명 제작 규칙
    ▶변수 이름은 [영문], [숫자],  _ , $ 로 만 구성된다. 단, 영문 중 예약어 (var, if 등)은 불가능하다.
    ▶<주의>변수명의 중간에 공백이 있으면 안 된다. 
    ▶<참고>영문 대신 한글,일어,한자 등 도 가능하나 영문을 사용한다.
    ▶변수명의 첫 글자로 숫자가 올 수는 없다.
    ▶변수명은 영문 대, 소문자를 구별한다.
    ▶관용적 변수명 제작 규칙
        ▶영문, 숫자, _ 로 구성한다.
        ▶변수명의 첫 글자는 영문으로 시작한다.
        ▶3자 이상으로 제작한다.
        ▶변수명을 보고 저장되는 데이터의 종류를 알 수 있도록 의미 있게 준다. (=가독성 있게 준다)
    ▶변수명 사용 불가능 예 
        => 273alpha(숫자시작), has space(중간공백)
        => (예약어)break, else, instanceof, true, case, false, new, try, catch, finally, null. typeof, continue, for, return, var, default, function, switch 등


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<10> 자바스크립트(Javascript)에서 변수의 종류는 뭐가 있습니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
---------------
전역변수
---------------
    ▶하나의 HTML 파일 안의 모든 자바스크립트에서 공유 가능한 변수다.
    ▶주로 함수 밖에서 var를 붙이거나 var 없이 선언된 변수다.
---------------
지역변수
---------------
    ▶함수 안에서 var 로 선언되어 함수 안에서만 사용되는 변수다.(지역변수)
    ▶<주의>함수 안에서 var 없이 선언된 변수는 함수 밖에서도 호출 가능한 [전역변수]가 된다. <이러면 안됨!!>
    ▶<예>function getTot() { var base = 80; ~ }
---------------
매개변수
---------------
    ▶함수 호출 시 전달되는 데이터를 저장하는 변수다.
    ▶함수 안에서만 사용가능한 지역변수이다.
    -------------------------------------------
    ▶<예>function 함수명( 매개변수 ){ 실행구문; }
    -------------------------------------------
    function getTot( kor ) { ~ }
    -------------------------------------------
    ▶<주의>매개변수 앞에는 절대 var 를 붙이지 않는다. 에러발생.


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<11> 자바스크립트(Javascript)에서 함수(=function)가 뭡니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
●[실행구문영역]에 이름을 붙여 선언한 후 필요 시점에 이름을 호출하여 [실행구문]을 실행하는 일종의 [단위 프로그램]이다.
●반복 사용하는 실행구문을 함수로 만들어놓으면 보관이 용이하고, 언제든지 쉽게 호출하여 사용할 수 있다.
●<참고>함수 보다 더 조직적인 [단위 프로그램]은 [객체]이다.


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<12> 함수(=function)의 종류는 뭐가 있습니까? (입)
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
---------------------
정적함수(선언적 함수)
---------------------
    ▶[함수명]을 붙여 선언하는 함수
    ▶형태
            ---------------------------------------
            function 함수명( 매개변수 ) {
                    
                    실행구문;

                    [return [반환값];]
            }
            ---------------------------------------
                대괄호는 생략이 가능하다는 의미이다. ex) [반환값] 혹은 [return]전체
                매개변수는 0개 이상 나올수 있음. 2개 이상이라면 , 로 나열함.
                매개변수 왼쪽에 var 있으면 절대 안된다.
            ---------------------------------------
            ●함수명은 변수명 제작 규칙과 동일하다. <주의>함수명 호출 시 함수명 철자와 대소문자가 일치해야한다.
            ●[매개변수]가 있을 경우 함수 호출 시 매개변수 개수와 자료형에 맞게 데이터를 전달하여 함수를 호출한다.
            ●함수 안에 return 반환값; 이 나오면 함수를 중단하고 함수를 호출한 곳으로 [반환값]을 리턴한다. 
            ●함수 안에 return; 이 나오면 함수를 중단만 한다.
            ●<주의> 동일한 이름의 정적 함수가 2개 이상 선언되면 마지막 정적함수가 진짜 정적함수이다.
            ---------------------------------------

---------------------
익명 함수
---------------------
    ▶[함수명] 없이 선언하는 함수로, 주로 변수에 저장한다. 즉, 데이터의 한 종류이다.
    ▶형태
            ---------------------------------------
            function( 매개변수 ) {
                    
                    실행구문;

                    [return [반환값];]
            }
            ---------------------------------------
                대괄호는 생략이 가능하다는 의미이다. ex) [반환값] 혹은 [return]전체
                매개변수는 0개 이상 나올수 있음. 2개 이상이라면 , 로 나열함.
                매개변수 왼쪽에 var 있으면 절대 안된다.
            ---------------------------------------
---------------------
내장 함수
---------------------
    ▶자주 사용되는 기능을 가진 미리 만들어져 제공하는 함수.
    ▶<예> alert("아~KFC 치킨...!!")
---------------------
사용자 정의 함수
---------------------
    ▶개발자가 만들어 사용하는 함수. 사용자 정의 = 개발자가 직접 만든      
---------------------
내부 함수
---------------------
    ▶함수 내부에 선언된 또 다른 함수. <주의>내장함수와 혼동하지 말자.
---------------------
콜백 함수(callback function) (입)
---------------------
    ▶직접 호출하지 않고 나중에 필요시 호출해서 사용하라고 전달해 주는 함수를 말한다.



■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<13> 내장 함수의 종류에는 뭐가 있습니까? 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
--------------------
alert( "문자열" ) ★★★★★
--------------------
    ▶확인 버튼이 있는 [경고상자]를 보여준다.
--------------------
confirm( "문자열" ) ★★★★★
--------------------
    ▶확인 버튼과 취소버튼이 있는 [경고상자]를 보여준다.
      [확인] 버튼 누르면 true 리턴, [취소] 버튼 누르면 false 리턴
--------------------
prompt( "문자열" )
--------------------
    ▶[문자열입력상자]와 확인 버튼, 취소 버튼이 있는 상자를 보여주고 [확인] 버튼 누르면 입력문자열 리턴.
--------------------
parseInt( 숫자문자, 10 ) ★★★★
--------------------
    ▶10진수로 표현된 [숫자문자]를 [정수]로 리턴.
    ▶<참고>[숫자문자]가 실수인 경우 소수 첫째자리부터 모두 버림.
--------------------
Number( 데이터 ) ★★
--------------------
    ▶데이터가 [숫자] 또는 [숫자문자]면 숫자 리턴. 아니면 NaN(=Not a Number) 리턴.
    ▶<주의>함수 이름이 대문자이다.
--------------------
isNaN( 데이터 )
--------------------
    ▶데이터가 [숫자] 또는 [숫자문자] false 리턴, [순수문자]면 true 리턴.
    ▶<참고> NaN => Not A Number
--------------------
setInterval( "자스코딩", n초x1000 ) ★★★★
setInterval( function(){자스코딩;}, n초x1000) ★★★★
--------------------
    ▶n초 마다 자스코딩을 반복 실행한다. <주의> "자스코딩"에서 " 를 빼면 안된다.
--------------------
setTimeout( "자스코딩", n초x1000 ) ★★★★
setTimeout( function(){자스코딩;}, n초x1000) ★★★★ 
--------------------
    ▶n초 후에 자스코딩을 실행한다. 카운트다운. <주의>"자스코딩"에서 " 를 빼면 안된다.
--------------------
typeof( 데이터 ) ★★★
--------------------
    ▶데이터의 자료형을 문자열로 리턴. 
    ▶<예> typeof(3)                 => "number" 리턴
    ▶<예> typeof( "햄버거" )         => "string" 리턴
    ▶<예> typeof( function(){~} )   => "function" 리턴
    ▶<예> typeof( new Date() )      => "object" 리턴
    ▶<예> var xxx; typeof( xxx )    => "undefined" 리턴
--------------------
eval( "문자열" )
--------------------
    ▶문자열을 자바스크립트 실행 코드로 바꾸어 실행한다.


















■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<> 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
