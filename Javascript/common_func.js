	//------------------------------------------------------------------------
	// 매개변수로 들어온 데이터가 비어있거나 공백으로 구성되어 있으면 
	// true 를 리턴, 아니면 false 리턴하는 함수 선언
	//------------------------------------------------------------------------
	function isEmpty( str ){	// str => 문자열이 저장되는 매개변수
		var flag = false;
		if( str.split(" ").join("")=="" ) {
			flag = true;
		}
		return flag;
	}
	
	//------------------------------------------------------------------------
	// 이메일 유효성 체크 공용함수 처리.
	// 매개변수로 들어온 이메일 문자가 이메일 문자 패턴에 맞으면 true 리턴하기.
	// 틀리면 false 리턴하기.
	//------------------------------------------------------------------------
	function isValidEmail( email ){	// email => 검사할 문자열(이메일)이 저장되는 매개변수
		// 이메일 문자열을 체크하는 RegExp 객체 생성하기.
		var regExp = new RegExp(/^([0-9a-zA-Z_-]+)@([0-9a-zA-Z_-]+)(\.[0-9a-zA-Z_-]+){1,2}$/);
		return regExp.test(email);
	}


	//------------------------------------------------------------------------
	// 문자열의 패턴식 공용함수 처리.
	// 매개변수로 들어온 RegExp 객체와 검사문자열을 이용하여 
	// 검사문자열이 RegExp 객체가 관리하는 문자 패턴에 맞으면 true 리턴하기.
	// 틀리면 false 리턴하기.
	//------------------------------------------------------------------------
	function isValidPattern( regExpObj, targetStr ){	// regExpObj => RegExp 객체의 메모리 위치 주소값이 저장되는 매개변수
														// targetStr => 패턴을 검사할 문자열이 저장되는 매개변수
		return regExpObj.test(targetStr);
	}


	



	



