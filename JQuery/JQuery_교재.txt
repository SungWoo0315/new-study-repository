■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<1> JQuery 가 무엇입니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    -------------------------------------------------------
    ● 공개적으로 개발되고 무료로 제공되는 [자바스크립트 사용자 정의 객체]의 이름이다. 
    -------------------------------------------------------
    <주의> 프로그램 언어의 한 종류가 아니다.  
    <참고> 누구나 버그 수정, 성능향상 그리고 도움말 작성에 참여 할 수 있다.
    <참고> http://plugins.jquery.com/ 에 광범위한 라이브러리(~.js)가 있으며, 꾸준히 업데이트되고 있고,
           누구나 버그 수정, 성능향상, 도움말 작성에 참여할 수 있다.


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<2> JQuery 의 장점.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    -------------------------------------------------------
    ● 디자이너, 퍼블리셔, 개발자 모두가 사용하기 편하고 간단한 코드로 강력한 기능을 가진 메소드를 제공한다.
    -------------------------------------------------------
    ● 대부분의 브라우저에서 JQuery 객체의 메소드를 호출하면 동일한 결과를 생산한다. (=cross browsing)
      즉, 브라우저에 따라 다른 코딩을 할 필요가 없다. 
      기존 자스코딩은 브라우저에 따라 다른 결과를 산출하는 어려움이 있었다.
    -------------------------------------------------------
    <참고> 한번의 코딩으로 모든 브라우저에서 같은 실행 결과를 산출하는 것을 크로스 브라우징(=cross browsing)이라고 한다.
           개발자가 제일 싫어하는 작업 중의 하나이다. 
    -------------------------------------------------------


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<3> JQuery 객체의 메소드를 사용하기 위한 사전 작업은 무엇이 있습니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    -------------------------------------------------------
    ● jquery-x.x.x.min.js 다운받고 HTML의 head 태그에 아래와 같이 수입하는 코드를 작성한다. x 는 임의의 버전 번호이다. 
    -------------------------------------------------------
        <script src="jquery-1.6.2.min.js" type="text/javascript"></script>
    -------------------------------------------------------
    jquery-x.x.x.min.js 파일 안에는 JQuery 객체의 메위주를 리턴하는 jQuery 함수 또는 $ 함수가 존재하고,
    JQuery 객체의 메소드나 속성변수가 선언되어 있다.
    -------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<4> JQuery 객체의 메위주를 얻으려면 어떻게 합니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    -------------------------------------------------------
    jQuery("선택자") 함수 또는 $("선택자") 함수를 호출하여 얻는다.
    -------------------------------------------------------
    jQuery("선택자") 함수 또는 $("선택자") 함수는 jquery-x.x.x.min.js 파일 안에 존재한다.
    -------------------------------------------------------
    <참고> JQuery 객체의 메위주를 얻어야 JQuery객체의 메소드를 호출할 수 있다.


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<5> JQuery 객체의 메위주를 얻고, 메소드를 호출하는 형식을 보여주세요.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ---------------------------------
    var xxx = $("선택자");          // $("선택자") 함수를 호출하여 얻은 JQuery 객체의 메위주를 변수 xxx 에 저장하기
    ---------------------------------
    xxx.JQuery객체메소드명(~)        // JQuery 객체의 메소드 호출
    ---------------------------------
    xxx.JQuery객체속성변수명         // JQuery 객체의 속성변수 호출
    ---------------------------------


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<6> jQuery("선택자") 함수 또는 $("선택자") 함수 호출 시 도대체 [선택자] 가 뭡니까? ★★★
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    -------------------------------------------------------
    선택자(=selector)는 태그를 지칭 하는 방법론을 말한다.
    -------------------------------------------------------
    JQuery 객체는 태그를 관리하는 객체이므로 태그를 지칭하는 방법론이 여러가지가 있다. 
    -------------------------------------------------------
    <예> var obj = $("[name=uid]");
    -------------------------------------------------------
        <1> 변수 obj 선언.
        <2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
            이때 JQuery 객체는 name=uid 를 가진 태그를 관리한다. 
    -------------------------------------------------------
    <예> var obj = $(".pwd");
    -------------------------------------------------------
        <1> 변수 obj 선언.
        <2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
            이때 JQuery 객체는 class=pwd 를 가진 태그를 관리한다. 
    -------------------------------------------------------
    <예> var obj = $("#addr");
    -------------------------------------------------------
        <1> 변수 obj 선언.
        <2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
            이때 JQuery 객체는 id=addr 를 가진 태그를 관리한다. 
    -------------------------------------------------------
    <예> var obj = $(".family .relation");
    -------------------------------------------------------
        <1> 변수 obj 선언.
        <2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
            이때 JQuery 객체는 class=family 를 가진 태그 후손 즉, 내부에 
                              class=relation 가진 태그 관리한다.

                    var obj = $(".relation"); // 이렇게되면 아래의 두가지를 관리하게 된다. 
                                              // 정확하게 하나만 관리하려면 부모를 잡고들어가야한다.
                    -------------------------------------------------------
                    <div class=family>
                        <span class=relation>얀센 접종자</span>
                    </div> 
                    <div class=employee>
                        <span class=relation>얀센 접종자2</span>
                    </div> 
                    -------------------------------------------------------
    -------------------------------------------------------
    <예> var obj = $("div");
    -------------------------------------------------------
        <1> 변수 obj 선언.
        <2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
            이때 JQuery 객체는 div 태그를 가진 태그를 관리한다. 
            만약 div 태그가 2개 이상이면, 정말 2개 이상을 관리한다. 


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<> JQuery 객체의 메소드를 알려주세요
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    너무 많아서 예제 하면서 메소드를 하나씩 작성할 예정.  


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<7> body 태그 안의 모든 태그를 읽어들인 이후 실행하고 싶은 코드가 있다. 
    JQuery 를 이용한다면 어떻게 코딩해야 합니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ------------------------------------------------------------
	$(document).ready(
		function(){
            body 태그 안의 모든 태그를 읽어들인 이후 실행하고 싶은 코드
        }
    )
    ------------------------------------------------------------
    // 현업에서는 이런식으로 행을 줄여서 사용.
    ------------------------------------------------------------
	$(document).ready( function(){
            body 태그 안의 모든 태그를 읽어들인 이후 실행하고 싶은 코드
    })        
    ------------------------------------------------------------


    $(document)  =>  $(document)함수 호출하여 JQuery 객체의 메위주를 얻는 코딩
                     <주의> ready 메소드를 호출하려면 $ 함수 호출 시 매개변수로 
                            선택자를 넘겨주지 말고 Document 객체의 메위주를 넘겨 준다. 
                            Document 객체의 메위주는 document 라는 변수에 저장되어 있다.  
                            document 라는 변수는 개발자가 만드는 변수가 아닌,
                            이미 만들어져 있는 변수이다.


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<8> <input type="button" value="로그인" class="login_btn"> 태그가 
    실행된 결과물인 버튼을 클릭하면 checkForm() 라는 함수를 호출하고 싶으면? 
    즉, 클릭 이벤트를 걸려면?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ------------------------------------------------------------
    $(".login_btn").click(
        function(){
                checkForm();
        }
    );
    ------------------------------------------------------------
    click( 익명함수 )  =>  JQuery 객체가 관리하는 태그에 클릭 이벤트가 발생하면 익명함수 안의 
                          코딩을 실행하라...
    ------------------------------------------------------------
    선택자가 가르키는 태그에 클릭 이벤트가 발생하면 실행구문을 실행하기
    ------------------------------------------------------------
    $("선택자").click(
        function(){
                실행구문
        }
    );
    ------------------------------------------------------------


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<9> 아래 html 태그의 실행 결과에서 웹브라우저에 문자열 입력양식이 출력된다.
    웹브라우저에서 아이디를 입력한 경우 입력된 아이디를 얻기 위한 JQuery 차원 코딩은?

    ------------------------------------------------------------
    <form name=loginForm>
        <input type="text" name="uid" class="uid" size=10>
    </form>
    ------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ------------------------------------------------------------
    <정답1>
    ------------------------------------------------------------
        var uid = $(".uid").val();                      // 권유사항. 
    ------------------------------------------------------------
    <정답2>
    ------------------------------------------------------------
        var uid = $("[name='uid']").val();              // 이렇게도 가능은 하다. 
    ------------------------------------------------------------
    <정답3>
    ------------------------------------------------------------
        var uid = $("[name='loginForm] .uid").val();    // 실무적으로 여러개의 form 태그 있을 때. 정확한 구별.   
    ------------------------------------------------------------
    <정답4>
    ------------------------------------------------------------
        var uid = $("[name='loginForm] [name='uid']").val();        
    ------------------------------------------------------------
    <주의> $("[name='loginForm] .uid") 에서 공백은 후손을 의미한다.
    <주의> $("[name='loginForm] [name='uid']") 에서 공백은 후손을 의미한다.
    ------------------------------------------------------------
    <참고> 될수 있는대로 <정답1> 또는 <정답3> 을 쓰는게 좋다. CSS 설정 시 유리하기 때문이다.  
           선택자는 주로 class 값을 많이 사용한다. 여러 이점이 있기 때문이다. 
    ------------------------------------------------------------

    val( )  =>  JQuery 객체가 관리하는 태그의 value 값을 리턴하는 메소드 

    ------------------------------------------------------------


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<10> $(".xxx").val() 와 $(".xxx").val("") 의 차이점은? 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    --------------------------
     $(".xxx").val()
    --------------------------
        class=xxx 를 가진 태그의 value 값을 리턴하라는 의미.
        <예> var uid = $(".uid").val();
    --------------------------
     $(".xxx").val("") 
    --------------------------
        class=xxx 를 가진 태그의 value 값을 "" 로 세팅하라는 의미.
        <예> $(".uid").val("");

---------------------------------------------------------------------------
> 내가 적어 본 정의
---------------------------------------------------------------------------
$(".xxx").val() 는 class=xxx 의 value 값을 리턴.
---------------------------------------------------------------------------
$(".xxx").val("") 는 class=xxx 의 value 값에 길이가 없는 "" 을 넣어주라는 뜻.  
---------------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<11> JQuery 객체에서 선택자의 종류?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ----------------------
    $(".xxx")
    ----------------------
        class="xxx" 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기
    ----------------------
    $("#xxx")
    ----------------------
        id="xxx" 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기
    ----------------------
    $("태그명")
    ----------------------
        <태그명 ~> 을 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기
    ----------------------
    $("*")
    ----------------------
        모든 태그를 관리하는 JQuery 객체 리턴
        -----------------------------------------------------------
        <예>
        -----------------------------------------------------------
            <form name="memRegForm">
                <input type="text" name="mem_name" class="mem_name">
                <input type="text" name="mem_id" class="mem_id">
                <input type="password" name="pwd" class="pwd">
                <select name="addr" class="addr" >  
                    <option value="">--선택요망--</option>
                    <option value="서울">서울</option>
                    <option value="경기">경기</option>
                    <option value="인천">인천</option>
                    <option value="기타">기타</option>
                </select>
            </form>
        -----------------------------------------------------------
        $( "[name='memRegForm'] *" )
        -----------------------------------------------------------
            name="memRegForm" 가진 태그의 모든 후손 태그를 관리하는 JQuery 객체 리턴.

    ********************************************
    $( "선택자1 선택자2" )
    ********************************************
        선택자1 이 가리키는 태그의 후손 중 선택자2 가 가리키는 태그를 관리하는 JQuery 객체 리턴.
        중간의 공백은 후손을 의미한다. 
    ********************************************
    $( "선택자1,선택자2" )
    ********************************************
        선택자1 이 가리키는 태그와 선택자2 가 가리키는 태그를 관리하는 JQuery 객체 리턴.

    ********************************************
    $( "선택자1>선택자2" )
    ********************************************
        선택자1 이 가리키는 태그의 [자식] 중 선택자2 가 가리키는 태그를 관리하는 JQuery 객체 리턴.


    ----------------------
    $(".xxx:checked")
    ----------------------
        class="xxx" 가진 태그 중에 체크된 태그를 관리하는 JQuery 객체 메위주 리턴하기  
        체크된 태그는 주로 radio 또는 checkbox 입력양식이다. 
    ----------------------
    $("선택자1 선택자2")     
    ----------------------
        선택자1 이 가르키는 태그의 후손 중에 선택자2가 가르키는 태그를 관리하는 JQuery 객체 메위주 리턴하기 
        ----------------------
        <예> $(".xxx :checked")      // 공백 들어가면? 
        ----------------------
            class="xxx" 가진 태그의 [후손] 중에 체크된 태그를 관리하는 JQuery 객체 메위주 리턴하기
            
    ********************************************
    $("[태그속성명='xxx']")     
    ********************************************
        [태그속성명='xxx'] 을 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기
        <주의> `[` 와 `]` 가 있어야한다.
        ----------------------
        <예> $("[name='mem_id']")      
        ----------------------
            name='mem_id' 을 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기
        ----------------------
        <예> $("[type='radio']")      
        ----------------------
            type='radio' 을 가진 태그, 즉, radio 입력양식 태그를 관리하는 JQuery 객체 메위주 리턴하기

    ********************************************
    $("[태그속성명!='xxx']")     
    ********************************************
        [태그속성명='xxx'] 을 [안가진] 태그를 관리하는 JQuery 객체 메위주 리턴하기
        <주의> `[` 와 `]` 가 있어야한다.
    
    ********************************************
    $("[태그속성명^='xxx']")     
    ********************************************
        태그속성명='xxx~' 으로 [시작]하는 태그를 관리하는 JQuery 객체 메위주 리턴하기
        태그속성명값으로 xxx 로 시작하는 태그를 관리하는 JQuery 객체 메위주 리턴하기.
        ----------------------
        <예> $("[name^='mem_']")      
        ----------------------
            name^='mem ~' 을 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기
            name 속성값이 mem_ 문자로 시작하는 태그를 관리하는 JQuery 객체 메위주 리턴하기.

    ********************************************
    $("[태그속성명$='xxx']")     
    ********************************************
        태그속성명='~xxx' xxx 로 [끝나는] 태그를 관리하는 JQuery 객체 메위주 리턴하기
        태그속성명값으로 xxx 로 끝나는 태그를 관리하는 JQuery 객체 메위주 리턴하기.
        ----------------------
        <예> $("[name$='name']")      
        ----------------------
            name$='~name' 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기  

    ********************************************
    $("[태그속성명*='xxx']")     
    ********************************************
        태그속성값으로 xxx 을 [포함한] 태그를 관리하는 JQuery 객체 리턴   

    ********************************************
    $( "선택자:first" )     
    ********************************************
        선택자가 가리키는 하나이상 태그 중 코딩상 첫번째 태그를 관리하는 JQuery 객체 리턴.  
        ----------------------
        <예> $(".gender:first")      
        ----------------------
            class='gender' 가진 태그 중에 첫번째 태그를 관리하는 JQuery 객체 메위주 리턴하기.  

    ********************************************
    $( "선택자:last" )     
    ********************************************
        선택자가 가리키는 하나이상 태그 중 코딩상 마지막 태그를 관리하는 JQuery 객체 리턴.  
        ----------------------
        <예> $(".gender:last")      
        ---------------------- 
            class='gender' 가진 태그 중에 마지막 태그를 관리하는 JQuery 객체 메위주 리턴하기.  

    ********************************************
    $( "선택자:odd" )     
    ********************************************
        선택자가 가리키는 태그 중에 인덱스 번호가 홀수인 태그를 관리하는 JQuery 객체 리턴.  
        ----------------------
        <예> $(".hobby:odd")      
        ---------------------- 
            <input type="checkbox" name="hobby" class="hobby" value="운동">운동
            <input type="checkbox" name="hobby" class="hobby" value="여행">여행
            <input type="checkbox" name="hobby" class="hobby" value="독서">독서
            <input type="checkbox" name="hobby" class="hobby" value="기타">기타
            --------------------------------------------------------------------
            class='hobby' 가진 태그 중에 인덱스 번호가 홀수인 태그를 관리하는 JQuery 객체 메위주 리턴하기.
            즉, 여행과 기타이다.  

    ********************************************
    $( "선택자:even" )     
    ********************************************
        선택자가 가리키는 태그 중에 인덱스 번호가 짝수인 태그를 관리하는 JQuery 객체 리턴.  
        ----------------------
        <예> $(".hobby:even")      
        ---------------------- 
            <input type="checkbox" name="hobby" class="hobby" value="운동">운동
            <input type="checkbox" name="hobby" class="hobby" value="여행">여행
            <input type="checkbox" name="hobby" class="hobby" value="독서">독서
            <input type="checkbox" name="hobby" class="hobby" value="기타">기타
            --------------------------------------------------------------------
            class='hobby' 가진 태그 중에 인덱스 번호가 짝수인 태그를 관리하는 JQuery 객체 메위주 리턴하기.
            즉, 운동과 독서이다.  

    ********************************************
    $( "선택자:eq(i)" )     
    ********************************************
        선택자가 가리키는 태그 중에 인덱스 번호가 i번째인 태그를 관리하는 JQuery 객체 리턴.  
        i 는 0 부터 시작하는 인덱스 번호가 들어간다.  

    ********************************************
    $( "선택자:first-child" )     
    ********************************************
        선택자가 가리키는 태그 중 각 태그의 부모입장에서 [첫번째] 자식에 해당하는 태그를 관리하는 JQuery 객체 리턴
        -----------------------------------
        <예>
        -----------------------------------
        <table class="student">
            <tr>
                <td>사오정</td>
                <td>대리</td>
                <td>남자</td>
            </tr>
            <tr>
                <td>저팔계</td>
                <td>과장</td>
                <td>여자</td>
            </tr>
        </table>
        -----------------------------------
        $( ".student td:first-child" )
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            그리고 그 td 중에 각 td 의 부모 입장에서 [첫째] 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            결국 <td>사오정</td> 와 <td>저팔계</td> 태그를 관리하는 JQuery 객체 리턴된다. 
        -----------------------------------
        $( ".student td:last-child" )
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            그리고 그 td 중에 각 td 의 부모 입장에서 [마지막] 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            결국 <td>남자</td> 와 <td>여자</td> 태그를 관리하는 JQuery 객체 리턴된다. 
        -----------------------------------
        $( ".student td:nth-child(n)" )   // `n` 은 1번 부터 시작하는 순서번호. i 는 0 부터 시작하는 인덱스.
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            그리고 그 td 중에 각 td 의 부모 입장에서 [n 번째] 자식 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            ex) n 이 2 이면
            <td>대리</td> 와 <td>과장</td> 태그를 관리하는 JQuery 객체 리턴된다. 
        -----------------------------------
        $( ".student td:nth-child(odd)" )
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            그리고 그 td 중에 각 td 의 부모 입장에서 [순서번호가 홀수번째]인 자식 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            결국 <td>사오정</td> 와 <td>저팔계</td>, <td>남자</td>, <td>여자</td>  태그를 관리하는 JQuery 객체 리턴된다. 
        -----------------------------------
        $( ".student td:nth-child(even)" )
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            그리고 그 td 중에 각 td 의 부모 입장에서 [순서번호가 짝수번째]인 자식 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            결국 <td>대리</td> 와 <td>과장</td>  태그를 관리하는 JQuery 객체 리턴된다. 
        -----------------------------------
        $( ".student td:gt(n)" )    // 순서번호.  
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            [순서번호가 n번째] [이후] 자식 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            ex) n 이 2 이면
            <td>남자</td> 와 <td>저팔계</td>, <td>과장</td>, <td>여자</td> 태그를 관리하는 JQuery 객체 리턴된다. 
        -----------------------------------
        $( ".student td:lt(n)" )    // 순서번호.  
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            [순서번호가 n번째] [이전] 자식 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            ex) n 이 2 이면
            결국 <td>사오정</td> 태그를 관리하는 JQuery 객체 리턴된다. 

    ********************************************
    $( "선택자1:has(선택자2)" )     
    ********************************************
        선택자1 이 가르키는 태그 중에 후손으로 선택자2 를 가진 선택자1 을 관리하는 JQuery 객체 리턴

        --------------------------------------------
        <예>
        --------------------------------------------
        <div class="movie">
            <span class="action">분노의질주</span>
        </div>

        <div class="movie">
            <span class="sf">인터스텔라</span>
        </div>

        <div class="movie">
            <span class="marvel">블랙위도우</span>
        </div>
        --------------------------------------------
        $( ".movie:has(.marvel)" )
        --------------------------------------------
            class=movie 를 가진 태그중에 후손으로 class=marvel 을 가진 태그를 골라 관리하는 JQuery 객체 리턴
            결국은 class=movie 를 가진 태그 중 3번째 div 태그를 관리하는 JQuery 객체 리턴

    ********************************************
    $( "선택자:contains('문자열')" )     
    ********************************************
        선택자가 가르키는 태그 중에 '문자열' 을 내포하고 있는 태그를 관리하는 JQuery 객체 리턴
        <주의> 위의 $( "선택자1:has(선택자2)" ) 와 혼동 금지!
        --------------------------------------------
        <예>
        --------------------------------------------
        <div class="movie">
            <span class="action">분노의질주</span>
        </div>

        <div class="movie">
            <span class="sf">인터스텔라</span>
        </div>

        <div class="movie">
            <span class="marvel">블랙위도우</span>
        </div>
        --------------------------------------------
        $( ".movie:contains('인터스텔라')" )
        --------------------------------------------
            class=movie 를 가진 태그중에 '인터스텔라' 라는 문자열을 내포하고있는 태그를 골라 관리하는 JQuery 객체 리턴
            결국은 class=movie 를 가진 태그 중 2번째 div 태그를 관리하는 JQuery 객체 리턴

    ********************************************
    $( "선택자1:not(선택자2)" )     
    ********************************************
        선택자1이 가르키는 태그 중에 선택자2 가 가르키는 태그가 아닌 태그를 관리하는 JQuery 객체 리턴
        <주의> 위의 $( "선택자1:has(선택자2)" ) 와 혼동 금지!
        --------------------------------------------
        <예>
        --------------------------------------------
            <input type="checkbox" name="hobby" class="hobby" value="운동">운동
            <input type="checkbox" name="hobby" class="hobby" value="여행">여행
            <input type="checkbox" name="hobby" class="hobby" value="독서">독서
            <input type="checkbox" name="hobby" class="hobby" value="기타">기타
            --------------------------------------------
            $( ".hobby:not(:checked)" )
            --------------------------------------------
                class=hobby 를 가진 태그중에 체크되어 있지 않은 태그를 골라 관리하는 JQuery 객체 리턴
            --------------------------------------------
            $( ".hobby:checked" )
            --------------------------------------------
                class=hobby 를 가진 태그중에 체크되어 있는 태그를 골라 관리하는 JQuery 객체 리턴
        --------------------------------------------
        <예>
        --------------------------------------------
            --------------------------------------------
            $( "input:not([type='button'])" )
            --------------------------------------------
                input 태그중에 type='button' 을 가진 태그를 뺀 나머지 태그를 골라 관리하는 JQuery 객체 리턴

    ********************************************
    $( ":text" )     
    ********************************************
        type="text" 를 가진 태그들을 관리하는 JQuery 객체 리턴.
        $( "[type='text']" )  와 동일하다.  

    ********************************************
    $( ":password" )     
    ********************************************
        type="password" 를 가진 태그들을 관리하는 JQuery 객체 리턴.
        $( "[type='password']" )  와 동일하다.  

    ********************************************
    $( ":checkbox" )     
    ********************************************
        type="checkbox" 를 가진 태그들을 관리하는 JQuery 객체 리턴.
        $( "[type='checkbox']" )  와 동일하다.  

    ********************************************
    $( ":radio" )     
    ********************************************
        type="radio" 를 가진 태그들을 관리하는 JQuery 객체 리턴.
        $( "[type='radio']" )  와 동일하다.  

    ********************************************
    $( ":file" )     
    ********************************************
        type="file" 를 가진 태그들을 관리하는 JQuery 객체 리턴.
        $( "[type='file']" )  와 동일하다.  

    ********************************************
    $( ":button" )     
    ********************************************
        type="button" 를 가진 태그들을 관리하는 JQuery 객체 리턴.
        $( "[type='button']" )  와 동일하다.  

    ********************************************
    $( ":submit" )     
    ********************************************
        type="submit" 를 가진 태그들을 관리하는 JQuery 객체 리턴.
        $( "[type='submit']" )  와 동일하다.  

    ********************************************
    $( ":reset" )     
    ********************************************
        type="reset" 를 가진 태그들을 관리하는 JQuery 객체 리턴.
        $( "[type='reset']" )  와 동일하다.  

    ********************************************
    $( ":checked" )     
    ********************************************
        체크된 태그들을 관리하는 JQuery 객체 리턴.
        <참고> 체크가 가능한 태그는 checkbox, radio HTML 입력 양식이다.

    ********************************************
    $( ":focus" )     
    ********************************************
        초점이 맞추어져 있는 태그들을 관리하는 JQuery 객체 리턴.

    ********************************************
    $( ":disabled" )     
    ********************************************
        비활성화된 태그들을 관리하는 JQuery 객체 리턴. 

    ********************************************
    $( ":enabled" )     
    ********************************************
        활성화된 태그들을 관리하는 JQuery 객체 리턴. 

    ********************************************
    $( ":visivle" )     
    ********************************************
        웹화면에 보이는 태그들을 관리하는 JQuery 객체 리턴. 

    ********************************************
    $( ":hidden" )     
    ********************************************
        웹화면에 안 보이는 태그들을 관리하는 JQuery 객체 리턴. 


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<12> JQuery 객체 메소드의 종류?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ********************************************
    add( "선택자" )                //$(선택자1).add( 선택자2 )
    ********************************************
        현재 JQuery 객체가 관리하는 태그에 [선택자1]이 가리키는 태그에 덧붙여서 
        [선택자2]가 가리키는 태그도 포함하여 관리하는 JQuery 객체 반환. 
        즉, [선택자1]이 가리키는 태그와 [선택자2]가 가리키는 태그를 관리하는 JQuery 객체 반환.

        현재 JQuery 객체가 관리하는 태그에 [선택자]가 가리키는 태그도 포함하여 관리하는 JQuery 객체 반환.
        즉, [선택자1]이 가리키는 태그와  [선택자2]가 가리키는 태그를 관리하는 JQuery 객체 반환.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
        <input type="text" name="mem_name" class="mem_name">
        <input type="text" name="mem_id" class="mem_id">
        --------------------------------------------------------
            --------------------------------------------------------
            var obj = $(".mem_name").add( ".mem_id" )   
            --------------------------------------------------------
                obj 에는 class="mem_name" 이 가리키는 태그와 class="mem_id" 가 가리키는 태그를 관리하는 
                JQuery 객체의 메위주가 저장된다.
                위 코드는 아래 처럼도 가능하다
                -------------------------------
                var obj = $(".mem_name,.mem_id" )
                -------------------------------

    ********************************************
    children( "선택자" )
    ********************************************
        현재 JQuery 객체가 관리하는 태그의 [자식]중 [선택자]가 가리키는 태그 관리하는 JQuery 객체 반환.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
        <div class="member">
            <input type="text" name="mem_name" class="mem_name">
            <div class="fmaily">
                <input type="text" name="chile_name" class="chile_name">
            </div>
        </div>
        --------------------------------------------------------
            --------------------------------------------------------
            var obj = $(".member").children( ".mem_name" )   
            --------------------------------------------------------
                obj 에는 class=member 이 가리키는 태그의 자식 중 class=mem_name 가리키는 태그를 관리하는 
                JQuery 객체의 메위주가 저장된다.
                위 코드는 아래 처럼도 가능하다
                -------------------------------
                var obj = $(".member>.mem_name" )
                -------------------------------

    ********************************************
    parent( )
    ********************************************
        현재 JQuery 객체가 관리하는 태그의 [부모 태그]를 관리하는 JQuery 객체 반환.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
        <div class="member">
            <input type="text" name="mem_name" class="mem_name">
            <div class="fmaily">
                <input type="text" name="chile_name" class="chile_name">
            </div>
        </div>
        --------------------------------------------------------
            --------------------------------------------------------
            var obj = $(".mem_name").parent( )   
            --------------------------------------------------------
                obj 에는 class=mem_name 이 가리키는 태그의 부모 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
                즉, <div class="member"> 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
               
    ********************************************
    parents( "선택자2" )
    ********************************************
        현재 JQuery 객체가 관리하는 태그의 [조상 태그] 중에 선택자2 가 가르키는 태그 중 [제일 가까운] 태그를 관리하는 JQuery 객체 반환.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
        <div class="aaa">
            <div class="xxx">
                <input type="text" name="mem_name" class="mem_name">
                <span>
                    <input type="text" name="child_name" class="child_name">
                </span>
            </div>
        </div>
        --------------------------------------------------------
            --------------------------------------------------------
            var obj = $(".child_name").parents("div" )   
            --------------------------------------------------------
                obj 에는 class=child_name 이 가리키는 태그의 조상 태그 중 제일 가까운 span 태그를 관리하는 
                JQuery 객체의 메위주가 저장된다.
                결국 <div class="xxx"> 태그를 관리하는 JQuery 객체의 메위주가 저장된다.

    ********************************************
    filter( "선택자2" ) ★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그중에 선택자2 가 가르키는 태그를 관리하는 JQuery 객체 반환.

    ********************************************
    find( "선택자2" )  ★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그의 [후손] 중에 선택자2 가 가르키는 태그를 관리하는 JQuery 객체 반환.

    ********************************************
    first( ) 
    ********************************************
        현재 JQuery 객체가 관리하는 태그 중에 [첫번째 태그] 를 관리하는 JQuery 객체 반환.

    ********************************************
    last( ) 
    ********************************************
        현재 JQuery 객체가 관리하는 태그 중에 [마지막 태그] 를 관리하는 JQuery 객체 반환.

    ********************************************
    next( ) 
    ********************************************
        현재 JQuery 객체가 관리하는 태그 [다음]에 나오는 [형제] 태그를 관리하는 JQuery 객체 반환.
        <비유> 내 밑에 동생
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <input type="text" name="mem_id" class="mem_id">
            <input type="text" name="mem_name" class="mem_name">
            --------------------------------------------------------
            var obj = $(".mem_id).next();
            --------------------------------------------------------
                obj 에는 class=mem_id 이 가리키는 태그의 다음 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
                결국, <input type="text" name="mem_name" class="mem_name"> 태그를 관리하는 JQuery 객체의 메위주가 저장된다.  

    ********************************************
    nextAll( ) 
    ********************************************
        현재 JQuery 객체가 관리하는 태그의 [다음]에 나오는 [모든] [형제] 태그를 관리하는 JQuery 객체 반환.
        <주의> 형제란 같은 부모 밑에 있는 자식들을 말한다.
        <비유> 내 밑에 있는 모든 동생.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div>
                <div >사오정</div>
                <div class=xxx>저팔계</div>
                <div>손오공</div>
                <div>삼장법사</div>
            </div>
            <div>
                <div>이순신</div>
                <div>권율</div>
                <div>이성계</div>
                <div>세종대왕</div>
            </div>
            --------------------------------------------------------
            var obj = $(".xxx").next();
            --------------------------------------------------------
                obj 에는 class=xxx 이 가리키는 태그의 다음에 나오는 모든 형제 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
                결국, <div>손오공</div>, <div>삼장법사</div> 태그를 관리하는 JQuery 객체의 메위주가 저장된다.  

    ********************************************
    prev( )         // <참고> previous 의 약어.
    ********************************************
        현재 JQuery 객체가 관리하는 태그 [이전]에 나오는 [형제] 태그를 관리하는 JQuery 객체 반환.
        <비유> 내 위 형  
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div>
                <div >사오정</div>
                <div class=xxx>저팔계</div>
                <div>손오공</div>
                <div>삼장법사</div>
            </div>
            <div>
                <div>이순신</div>
                <div>권율</div>
                <div>이성계</div>
                <div>세종대왕</div>
            </div>
            --------------------------------------------------------
            var obj = $(".xxx").prev();
            --------------------------------------------------------
                obj 에는 class=xxx 이 가리키는 태그의 이전에 나오는 형제 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
                결국, <div >사오정</div> 태그를 관리하는 JQuery 객체의 메위주가 저장된다.  

    ********************************************
    prevAll( )         
    ********************************************
        현재 JQuery 객체가 관리하는 태그 [이전]에 나오는 [모든] 형제 태그를 관리하는 JQuery 객체 반환.
        <비유> 내 위에 있는 모든 형 
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div>
                <div >사오정</div>
                <div>손오공</div>
                <div class=xxx>저팔계</div>
                <div>삼장법사</div>
            </div>
            <div>
                <div>이순신</div>
                <div>권율</div>
                <div>이성계</div>
                <div>세종대왕</div>
            </div>
            --------------------------------------------------------
            var obj = $(".xxx").prevAll();
            --------------------------------------------------------
                obj 에는 class=xxx 이 가리키는 태그의 [이전]에 나오는 [모든] 형제 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
                결국, <div >사오정</div>, <div>손오공</div> 태그를 관리하는 JQuery 객체의 메위주가 저장된다.  

    ********************************************
    eq(i)         
    ********************************************
        현재 JQuery 객체가 관리하는 태그중에 [인덱스번호]가 [i번째]인 태그를 관리하는 JQuery 객체 반환.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class=movie>
                <div>이도공간</div>
                <div>엑소시스트</div>
                <div>여고괴담</div>
                <div>컨저링</div>
            </div>
            --------------------------------------------------------
            var obj = $(".movie").find("div").eq(2);
            var obj = $(".movie div").eq(2);
            위 두가지는 같은 결과를 낸다.  
            --------------------------------------------------------
                obj 에는 class=movie 이 가리키는 태그의 [후손]중 [div 태그] 중 [인덱스 번호]가 [2번]인 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
                결국, <div>여고괴담</div> 태그를 관리하는 JQuery 객체의 메위주가 저장된다.  
               --------------------------------------------------------
                <참고> var obj = $(".movie div").eq(2); 아래 코드와 동일하다.  
               --------------------------------------------------------
                var obj = $(".movie").find("div").eq(2);
               --------------------------------------------------------

    ********************************************
    siblings( )         
    ********************************************
        현재 JQuery 객체가 관리하는 태그에 [모든] [형제 태그]를 관리하는 JQuery 객체 반환.
        <주의> 모든 형제를 가리키므로 나는 빠진다.  
        <비유> 나를 제외한 모든 아래위 형제.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div>
                <div >사오정</div>
                <div>손오공</div>
                <div class=xxx>저팔계</div>
                <div>삼장법사</div>
            </div>
            <div>
                <div>이순신</div>
                <div>권율</div>
                <div>이성계</div>
                <div>세종대왕</div>
            </div>
            --------------------------------------------------------
            var obj = $(".xxx").siblings();
            --------------------------------------------------------
                obj 에는 class=xxx 이 가리키는 태그의 [모든] 형제 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
                결국, <div >사오정</div>, <div>손오공</div>, <div>삼장법사</div> 태그를 관리하는 JQuery 객체의 메위주가 저장된다.  

    ********************************************
    not( "선택자" )         
    ********************************************
        현재 JQuery 객체가 관리하는 태그 중에 선택자가 가리키는 태그가 [아닌] [나머지 태그]를 관리하는 JQuery 객체 반환.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class=cartoon>
                <div >사오정</div>
                <div>손오공</div>
                <div class=xxx>저팔계</div>
                <div>삼장법사</div>
            </div>
            --------------------------------------------------------
            var obj = $(".cartoon div").not(".xxx");
            --------------------------------------------------------
                obj 에는 class=cartoon 이 가리키는 태그 후손 중에 class=xxx 를 가지고 있지 않는 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
                결국, <div >사오정</div>, <div>손오공</div>, <div>삼장법사</div> 태그를 관리하는 JQuery 객체의 메위주가 저장된다.  
                --------------------------------------------------------
                <참고>  var obj = $(".cartoon div").not(".xxx"); 아래 코드와 동일하다.
                --------------------------------------------------------
                var obj = $(".cartoon div:not(.xxx)");
                --------------------------------------------------------

    ********************************************
    text(  )  ★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그가 끌어안고 있는 [웹브라우저 출력] [문자]를 [리턴].
        JQuery 객체가 관리하는 태그가 끌어안고 있는 또 다른 태그는 리턴되지 않는다.  
        이때, 리턴하는 문자는 [화면에 출력되는 문자]이다.  
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class=xxx>저팔계</div>
            -----------------------------
            var str = $(".xxx").text( );
            -----------------------------
                str 에는 class=xxx 가 가리키는 태그가 끌어 안고 있는 문자가 저장되어 있다.  
                결국, [저팔계] 가 저장되어 있다. 
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class=xxx><div>저팔계</div></div>
            -----------------------------
            var str = $(".xxx").text( );
            -----------------------------
                ---------------------------------------------------
                str 에는     <div>저팔계</div>    저장되어 있다.  (X) 
                str 에는     저팔계               저장되어 있다.  (O)
                ---------------------------------------------------
                <주의> str 에는  <div>저팔계</div> 가 저장되어 있지 않다.

    ********************************************
    text("문자열")  ★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그 내부에 [문자열]을 덮어쓴다.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class=xxx>저팔계</div>
            -----------------------------
            $(".xxx").text("오세황");
            -----------------------------
                class=xxx 가 가리키는 태그 내부에 "오세황" 이라는 문자를 덮어씌운다.
                결과적으로 <div class=xxx>저팔계</div> 가 <div class=xxx>오세황</div> 으로 바뀐다.
                그러므로 화면에 출력되는 "저팔계" 가 "오세황" 으로 바뀌어 보인다.    

    ********************************************
    html( )  ★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그가 끌어안고 있는 [모든 코딩]을 [문자열]로 [리턴] 한다.
        코딩에는 [문자열] 또는 [html 태그]도 포함된다.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class=xxx><div>저팔계</div></div>
            -----------------------------
            var str = $(".xxx").html( );
            -----------------------------
                ---------------------------------------------------
                str 에는 class=xxx 가 가리키는 태그가 끌어안고 있는 모든 코딩을 문자로 저장되어 있다. 
                결국 str 에는    "<div>저팔계</div>"    가 문자열로 저장되어 있다.  
                ---------------------------------------------------

    ********************************************
    html("html태그도포함할수있는문자열")
    ********************************************
        현재 JQuery 객체가 관리하는 태그 내부에 [html태그도포함할수있는문자열] 을 덮어쓴다.
        문자열 안에는 html 태그도 있을수 있다.  
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class=xxx><div>저팔계</div></div>
            -----------------------------
            $(".xxx").html( "<span>사오정</span>" );
            -----------------------------
                ---------------------------------------------------
                class=xxx 가 가리키는 태그 안에  <span>사오정</span>  를 덮어씌우기.
                결국 <div class=xxx><div>저팔계</div></div> 는 <div class=xxx><span>사오정</span></div> 으로 바뀐다.
                ---------------------------------------------------

    ********************************************
    val( )
    ********************************************
        현재 JQuery 객체가 관리하는 태그를 웹브라우저가 읽어들이면 DOM 객체를 생성하게 되는데
        이때 이 DOM 객체의 [value 라는 속성변수] 안의 값을 [문자열]로 [리턴]한다.
        주로, value 라는 속성변수를 가진 태그는 <input ~> 또는 <select ~> 또는 <textarea ~> 이다.  
        --------------------------------------------------------
        [입력양식 태그]가 실행되어 웹브라우저에 출력된 후 
        웹브라우저에서 유저가 키보드로 입력하거나 선택하거나 체크할 경우의 
        [키보드로 입력]한 값 또는 [선택]한 값 또는 [체크]한 값을 문자열 리턴한다.  
        --------------------------------------------------------
        현재 JQuery 객체가 관리하는 태그 내부에 [value] 라는 [속성의 값]을 리턴한다.  
        <주의> value 라는 속성은 주로 [입력 양식 태그]만 가지고 있다.  
        --------------------------------------------------------
        <form name="memRegForm">
            <input type="text" name="uid">
        </form>
        --------------------------------------------------------
            위 html 을 웹브라우저가 읽어들이면
            <input type="text" name="uid"> 태그는 Text 객체로 생성한다.  
            그리고 이 Text 객체에 대응하는 입력양식이 웹브라우저 화면에 출력된다.  
            웹브라우저 상에 이 입력양식에 bravo 라고 입력한다면 
            Text 객체의 속성변수 value 에는 bravo 가 저장된다.  
            이 상태에서 
            var str = $(".uid").val();  코드가 실행된다면 Text 객체의 
            value 속성변수 안의 값을 리턴하여 str 에 저장하게 된다. 

    ********************************************
    val("문자열")
    ********************************************
        현재 JQuery 객체가 관리하는 태그를 웹브라우저가 읽어들이면 DOM 객체를 생성하게 되는데
        이때 이 DOM 객체의 value 라는 속성변수 안에 [문자열]을 [삽입]한다.  
        --------------------------------------------------------
        <form name="memRegForm">
            <input type="text" name="uid">
        </form>
        --------------------------------------------------------
            위 html 을 웹브라우저가 읽어들이면
            <input type="text" name="uid"> 태그는 Text 객체로 생성한다.  
            그리고 이 Text 객체에 대응하는 입력양식이 웹브라우저 화면에 출력된다.  
            이 상태에서 
            $(".uid").val("bravo");  코드가 실행된다면 Text 객체의 
            value 속성변수 안의 값을 bravo 로 셋팅하게 된다.
            그러므로 웹화면상에서도 입력양식에 bravo 가 입력되어 보인다.  

    ********************************************
    append( "html코드" ) ★★★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그 내부에 [막내 자식]으로 [html 코드] 를 삽입한다.  
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class="movie">
                <div>컨저링</div>
                <div>쏘우</div>
            </div>
            -----------------------------
            $(".movie").append( "<div>랑종</div>" );
            -----------------------------
                ---------------------------------------------------
                class=movie 가 가리키는 태그 안에 막내 자식으로 <div>랑종</div>  를 삽입하기.
                결국 아래 처럼 태그가 삽입 된다. 
                
                <div class="movie">
                    <div>컨저링</div>
                    <div>쏘우</div>
                    <div>랑종</div>
                </div>               
                ---------------------------------------------------

    ********************************************
    prepend( "html코드" )
    ********************************************
        현재 JQuery 객체가 관리하는 태그 내부에 [첫째 자식]으로 [html 코드] 를 삽입한다.  
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class="movie">
                <div>컨저링</div>
                <div>쏘우</div>
            </div>
            -----------------------------
            $(".movie").prepend( "<div>랑종</div>" );
            -----------------------------
                ---------------------------------------------------
                class=movie 가 가리키는 태그 안에 첫째 자식으로 <div>랑종</div>  를 삽입하기.
                결국 아래 처럼 태그가 삽입 된다. 
                
                <div class="movie">
                    <div>랑종</div>
                    <div>컨저링</div>
                    <div>쏘우</div>
                </div>               
                ---------------------------------------------------
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
        <div class="movie">
            <div>
                <div>컨저링</div>
                <div>쏘우</div>
            </div>
            <div>
                <div>분노의 질주</div>
                <div>데드풀</div>
            </div>
        </div>
        --------------------------------------------------------
        <문> 위에서 <div>데드풀</div> 태그 밑에 동생으로 <div>존윅3</div> 을 삽입하려면? 
        --------------------------------------------------------
            ---------------------
            정답
            ---------------------
            $(".movie div").eq(0).siblings().append( "<div>존윅3</div>" );  // 6개 인덱스 중에 0번째 골라서.

            $(".movie div:last").parent().append( "<div>존윅3</div>" );

            $(".movie :last").parent().append( "<div>존윅3</div>" );

            $(".movie>div").eq(1).append( "<div>존윅3</div>" );             // `>` 사이 공백넣지말기. 주의 하기. 
           
            $(".movie div").eq(3).append( "<div>존윅3</div>" );      

            $(".movie").children().eq(1).append("<div>존윅3</div>");

            $(".movie div:contains('데드풀')").parent().eq(1).append("<div>존윅3</div>");

            $(".movie div:contains('데드풀')").eq(0).append("<div>존윅3</div>");


            $(".movie div:eq(0)").next().append("<div>존윅3</div>");

            $(".movie div").eq(5).parent().append( "<div>존윅3</div>" );  

            $(".movie div").eq(5).after( "<div>존윅3</div>" );  

      
            ---------------------
            오답. 왜 틀렸는지 보기.  
            ---------------------
            $(".movie div:contains('데드풀')").append( "<div>존윅3</div>" );
                    --오답실행결과-----------------------------
                    <div class="movie">
                        <div>
                            <div>컨저링</div>
                            <div>쏘우</div>
                        </div>
                        <div>
                            <div>분노의 질주</div>
                            <div>데드풀<div>존윅3</div></div>
                            <div>존윅3</div>
                        </div>
                    </div>
                    ------------------------------------------
            $(".movie div:contains('데드풀')").parent().append( "<div>존윅3</div>" );
                    --오답실행결과-----------------------------
                    <div class="movie">
                        <div>
                            <div>컨저링</div>
                            <div>쏘우</div>
                        </div>
                        <div>
                            <div>분노의 질주</div>
                            <div>데드풀</div>
                            <div>존윅3</div>
                        </div>
                        <div>존윅3</div>
                    </div>
                    ------------------------------------------
            >>> '데드풀' 을 내포하고 있는 div 태그는 [두개]이기 때문.
            --------------------------------------------------------
            $(".movie div").eq(1).append( "<div>존윅3</div>" );     // 후손 6개 중에 2번째.  
            $(".movie div:eq(1)").append( "<div>존윅3</div>" );
                    --오답실행결과-----------------------------
                    <div class="movie">
                        <div>
                            <div>컨저링<div>존윅3</div></div>
                            <div>쏘우</div>
                        </div>
                        <div>
                            <div>분노의 질주</div>
                            <div>데드풀</div>
                        </div>
                    </div>
                    ------------------------------------------

            --------------------------------------------------------
            $(".movie:eq(1)").append( "<div>존윅3</div>" );     // 화면에 아무런 변화가 없다.  
            --------------------------------------------------------

            --------------------------------------------------------
            $(".movie div:last").append( "<div>존윅3</div>" );
            $(".movie :last").append( "<div>존윅3</div>" );
                    --오답실행결과-----------------------------
                    <div class="movie">
                        <div>
                            <div>컨저링</div>
                            <div>쏘우</div>
                        </div>
                        <div>
                            <div>분노의 질주</div>
                            <div>데드풀<div>존윅3</div></div>
                        </div>
                    </div>
                    ------------------------------------------
            --------------------------------------------------------



    ********************************************
    after( "html코드" )
    ********************************************
        현재 JQuery 객체가 관리하는 태그의 [밑 동생]으로 [html 코드] 를 삽입한다.  
        <주의> next( ) 와 혼동하지 말것.  
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class=cartoon>
                <div >사오정</div>
                <div>손오공</div>
                <div class=xxx>저팔계</div>
                <div>삼장법사</div>
            </div>
            ---------------------------------------------------
            $(".xxx").after("<div>짱구</div>");
            ---------------------------------------------------
                class=xxx 가 가리키는 태그 다음으로 즉, [밑 동생]으로 <div>짱구</div> 를 삽입하기.
                결국 아래처럼 태그가 삽입된다.  

                <div class=cartoon> 
                    <div >사오정</div>
                    <div>손오공</div>
                    <div class=xxx>저팔계</div>
                    <div>짱구</div>
                    <div>삼장법사</div>
                </div>

    ********************************************
    before( "html코드" )
    ********************************************
        현재 JQuery 객체가 관리하는 태그의 [위 형]으로 [html 코드] 를 삽입한다.  
        <주의> prev( ) 와 혼동하지 말것.  
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class=cartoon>
                <div >사오정</div>
                <div>손오공</div>
                <div class=xxx>저팔계</div>
                <div>삼장법사</div>
            </div>
            ---------------------------------------------------
            $(".xxx").before("<div>짱구</div>");
            ---------------------------------------------------
                class=xxx 가 가리키는 태그 다음으로 즉, [위 형]으로 <div>짱구</div> 를 삽입하기.
                결국 아래처럼 태그가 삽입된다.  

                <div class=cartoon> 
                    <div >사오정</div>
                    <div>손오공</div>
                    <div>짱구</div>
                    <div class=xxx>저팔계</div>
                    <div>삼장법사</div>
                </div>

    ********************************************
    remove( )
    ********************************************
        현재 JQuery 객체가 관리하는 [태그]를 [삭제]한다.    
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class=cartoon>
                <div >사오정</div>
                <div>손오공</div>
                <div class=xxx>저팔계</div>
                <div>삼장법사</div>
            </div>
            ---------------------------------------------------
            $(".cartoon").remove( );
            ---------------------------------------------------
                class=cartoon 가진 태그를 삭제한다. 그러므로 후손도 삭제된다.  

    ********************************************
    empty( )
    ********************************************
        현재 JQuery 객체가 관리하는 태그의 [후손]을 [삭제]한다.    
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class="cartoon">
                <div >사오정</div>
                <div>손오공</div>
                <div class=xxx>저팔계</div>
                <div>삼장법사</div>
            </div>
            ---------------------------------------------------
            $(".cartoon").empty( );
            ---------------------------------------------------
                class=cartoon 가진 태그의 후손 모두가 삭제된다.  
                "class=cartoon" 을 가진 태그는 남아있다.
                즉,
                <div class="cartoon">
                    <div >사오정</div>
                    <div>손오공</div>
                    <div class=xxx>저팔계</div>
                    <div>삼장법사</div>
                </div>
                가
                <div class="cartoon">
                </div>
                이렇게 된다.  

    ********************************************
    addClass( "클래스명" )  ★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그에 [class="클래스명"] 이란 [속성명]과 [속성값]을 [삽입]한다.    
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div>사오정</div>
            ---------------------------------------------------
            $("div").addClass( "cartoon" );
            ---------------------------------------------------
            <div>사오정</div> 태그 안에 class="cartoon" 을 삽입하라.
            결국, <div>사오정</div> 가 <div class="cartoon">사오정</div> 로 바뀌는 것이다.  
            -------------------------
            class 값이 삽입되면 좋은점
            -------------------------
                CSS 가 와서 예쁘게 화장을 해줄수 있다.  
                class 값이 생기므로 JQuery 객체가 잡으러 오기가 쉽다.  


    ********************************************
    removeClass( "클래스명" )  ★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그에 존재하는 [class="클래스명"] 이란 [속성명]과 [속성값]을 [삭제]한다.    
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <div class="cartoon">사오정</div>
            ---------------------------------------------------
            $("div").removeClass( "cartoon" );
            ---------------------------------------------------
            <div>사오정</div> 태그 안에 class="cartoon" 을 삭제하라.
            결국,  <div class="cartoon">사오정</div> 가 <div>사오정</div> 로 바뀌는 것이다.  
           
    ********************************************
    toggleClass( "클래스명" )   // <참고> toggle =>  껐다 켰다[왔다 갔다] 하다.  
    ********************************************
        현재 JQuery 객체가 관리하는 태그에 [class="클래스명"] 이 [있다면 제거]하고,
        [없다면] [class="클래스명"] [삽입].     

    ********************************************
    attr( '태그속성명' )  ★★★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그에 [태그속성명] 에 해당하는 [속성값]을 [리턴]한다.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <input type="text" name="uid" class="uid">
            ----------------------------------------------------
            var str = $(".uid").attr( "name" );
            ----------------------------------------------------
                class="uid" 를 가진 태그의 name 속성값을 리턴해서 str 변수에 저장하라.  

    ********************************************
    attr( "태그속성명", "태그속성값" )  ★★★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그에 [태그속성명] 에 [태그속성값]을 [삽입]한다.
        <주의> 태그에 속성 값이 수정되므로 태그의 특징이 바뀌는 것과 동일하므로, 조심히 사용해야 한다. 
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <input type="text" name="uid" class="uid">
            ----------------------------------------------------
            $(".uid").attr( "name", "user_id" );
            ----------------------------------------------------
                class="uid" 를 가진 태그의 name 속성값을 "user_id" 로 수정하라.  

    ********************************************
    attr( {"태그속성명":"태그속성값", "태그속성명":"태그속성값", ~} )  ★★★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그에 [여러개의] [태그속성명] 에 [태그속성값]을 [삽입]한다.

    ********************************************
    removeAttr( "태그속성명" ) 
    ********************************************
        현재 JQuery 객체가 관리하는 태그에 [태그속성명] 에 [태그속성값]을 [삭제]한다.
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <input type="text" name="uid" class="uid" size=100>
            ----------------------------------------------------
            $(".uid").removeAttr( "size" );
            ----------------------------------------------------
                class="uid" 를 가진 태그의 size 속성명과 속성값을 삭제한다. 
                결론적으로  
                <input type="text" name="uid" class="uid" size=100>
                는
                <input type="text" name="uid" class="uid">
                로 바뀐다.  

    ********************************************
    prop( "DOM객체의 속성변수명" ) 
    ********************************************
        현재 JQuery 객체가 관리하는 태그를 웹브라우저가 읽어들여 DOM 객체로 생성할 때,
        이 [DOM 객체]의 [속성변수]의 [값]을 [리턴]한다.

    ********************************************
    prop( "DOM객체의 속성변수명", "데이터" ) 
    ********************************************
        현재 JQuery 객체가 관리하는 태그를 웹브라우저가 읽어들여 DOM 객체로 생성할 때,
        이 [DOM 객체]의 [속성변수]에 [데이터]를 [저장]한다.
        --------------------------------------------------------
        <예> checkbox 입력양식 또는 radio 입력양식에 체크를 해주거나 체크를 뺄때 많이 사용한다.  
        --------------------------------------------------------
            <input type="checkbox" name="skill" value="JSP" class="skill">JSP
            <input type="checkbox" name="skill" value="ASP" class="skill">ASP
            <input type="checkbox" name="skill" value="PHP" class="skill">PHP
            --------------------------------------------------------
            <문제> 코딩으로 JSP 를 체크하려면?
            --------------------------------------------------------
                $(".skill").eq(0).attr( "checked", true )   (X)

                $(".skill").eq(0).prop( "checked", true )   (O)
                $(".skill:eq(0)").prop( "checked", true )   (O)
                
                // 가장 정확함. 순서상관없이 찾아들어갈 수 있다. ★★★★★★★★★★
                $(".skill)").filter("[value=JSP]").prop( "checked", true )   (O) 
            --------------------------------------------------------
            <문제> ASP 의 체크여부를 얻으려면?
            --------------------------------------------------------
                var flag = $(".skill)").filter("[value=ASP]").prop( "checked" )





    ********************************************
    each(  function(index){실행구문;}  )  ★★★★★★★★★★
    ********************************************
        현재 JQuery 객체가 관리하는 태그들에 차례대로 접근해서 실행구문을 반복 실행한다.
        <비유> 학생 붙잡고, 청소해!
        --------------------------------------------------------
        <예>
        --------------------------------------------------------
            <input type="text" name="mem_id" class="mem_id">
            <input type="text" name="mem_name" class="mem_name">
            <select name=addr class="addr">
                <option value=""></option>
                <option value="서울">서울</option>
                <option value="경기">경기</option>
                <option value="인천">인천</option>
                <option value="기타">기타</option>
            </select>
        --------------------------------------------------------
            $(".mem_id,.mem_name,.addr").each(
                function(i){
                    // ---------------------------------
                    // JQuery 객체가 관리하는 i번째 태그의 value 값을 얻어 변수 value 에 저장하기. 
                    // ---------------------------------
                    var value = $(this).val();
                    // ---------------------------------
                    // JQuery 객체가 관리하는 i번째 태그의 name 값을 얻어 변수 name 에 저장하기. 
                    // ---------------------------------
                    var name = $(this).attr("name");
                    // ---------------------------------
                    // 만약에 value 값이 비어있거나 공백이면 경고하기
                    // ---------------------------------
                    if( value.split(" ").join("")=="" ){
                        alert( name + " 는(은) 데이터가 비었습니다. 입력 또는 선택해 주세요.")
                    }
                }
            );
        --------------------------------------------------------
            class="mem_id", class="mem_name", class="addr" 를 가진 태그를 관리하는 JQuery 객체를 생성하고,
            each 메서드를 호출하여    function(i){ 실행구문 }    익명함수의 실행구문을 실행한다.   























■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<> 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■






■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<> 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■








■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<> 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■























■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<> 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■





