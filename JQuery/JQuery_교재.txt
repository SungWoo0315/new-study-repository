■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<1> JQuery 가 무엇입니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    -------------------------------------------------------
    ● 공개적으로 개발되고 무료로 제공되는 [자바스크립트 사용자 정의 객체]의 이름이다. 
    -------------------------------------------------------
    <주의> 프로그램 언어의 한 종류가 아니다.  
    <참고> 누구나 버그 수정, 성능향상 그리고 도움말 작성에 참여 할 수 있다.
    <참고> http://plugins.jquery.com/ 에 광범위한 라이브러리(~.js)가 있으며, 꾸준히 업데이트되고 있고,
           누구나 버그 수정, 성능향상, 도움말 작성에 참여할 수 있다.


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<2> JQuery 의 장점.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    -------------------------------------------------------
    ● 디자이너, 퍼블리셔, 개발자 모두가 사용하기 편하고 간단한 코드로 강력한 기능을 가진 메소드를 제공한다.
    -------------------------------------------------------
    ● 대부분의 브라우저에서 JQuery 객체의 메소드를 호출하면 동일한 결과를 생산한다. (=cross browsing)
      즉, 브라우저에 따라 다른 코딩을 할 필요가 없다. 
      기존 자스코딩은 브라우저에 따라 다른 결과를 산출하는 어려움이 있었다.
    -------------------------------------------------------
    <참고> 한번의 코딩으로 모든 브라우저에서 같은 실행 결과를 산출하는 것을 크로스 브라우징(=cross browsing)이라고 한다.
           개발자가 제일 싫어하는 작업 중의 하나이다. 
    -------------------------------------------------------


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<3> JQuery 객체의 메소드를 사용하기 위한 사전 작업은 무엇이 있습니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    -------------------------------------------------------
    ● jquery-x.x.x.min.js 다운받고 HTML의 head 태그에 아래와 같이 수입하는 코드를 작성한다. x 는 임의의 버전 번호이다. 
    -------------------------------------------------------
        <script src="jquery-1.6.2.min.js" type="text/javascript"></script>
    -------------------------------------------------------
    jquery-x.x.x.min.js 파일 안에는 JQuery 객체의 메위주를 리턴하는 jQuery 함수 또는 $ 함수가 존재하고,
    JQuery 객체의 메소드나 속성변수가 선언되어 있다.
    -------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<4> JQuery 객체의 메위주를 얻으려면 어떻게 합니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    -------------------------------------------------------
    jQuery("선택자") 함수 또는 $("선택자") 함수를 호출하여 얻는다.
    -------------------------------------------------------
    jQuery("선택자") 함수 또는 $("선택자") 함수는 jquery-x.x.x.min.js 파일 안에 존재한다.
    -------------------------------------------------------
    <참고> JQuery 객체의 메위주를 얻어야 JQuery객체의 메소드를 호출할 수 있다.


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<5> JQuery 객체의 메위주를 얻고, 메소드를 호출하는 형식을 보여주세요.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ---------------------------------
    var xxx = $("선택자");          // $("선택자") 함수를 호출하여 얻은 JQuery 객체의 메위주를 변수 xxx 에 저장하기
    ---------------------------------
    xxx.JQuery객체메소드명(~)        // JQuery 객체의 메소드 호출
    ---------------------------------
    xxx.JQuery객체속성변수명         // JQuery 객체의 속성변수 호출
    ---------------------------------


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<6> jQuery("선택자") 함수 또는 $("선택자") 함수 호출 시 도대체 [선택자] 가 뭡니까? ★★★
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    -------------------------------------------------------
    선택자(=selector)는 태그를 지칭 하는 방법론을 말한다.
    -------------------------------------------------------
    JQuery 객체는 태그를 관리하는 객체이므로 태그를 지칭하는 방법론이 여러가지가 있다. 
    -------------------------------------------------------
    <예> var obj = $("[name=uid]");
    -------------------------------------------------------
        <1> 변수 obj 선언.
        <2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
            이때 JQuery 객체는 name=uid 를 가진 태그를 관리한다. 
    -------------------------------------------------------
    <예> var obj = $(".pwd");
    -------------------------------------------------------
        <1> 변수 obj 선언.
        <2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
            이때 JQuery 객체는 class=pwd 를 가진 태그를 관리한다. 
    -------------------------------------------------------
    <예> var obj = $("#addr");
    -------------------------------------------------------
        <1> 변수 obj 선언.
        <2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
            이때 JQuery 객체는 id=addr 를 가진 태그를 관리한다. 
    -------------------------------------------------------
    <예> var obj = $(".family .relation");
    -------------------------------------------------------
        <1> 변수 obj 선언.
        <2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
            이때 JQuery 객체는 class=family 를 가진 태그 후손 즉, 내부에 
                              class=relation 가진 태그 관리한다.

                    var obj = $(".relation"); // 이렇게되면 아래의 두가지를 관리하게 된다. 
                                              // 정확하게 하나만 관리하려면 부모를 잡고들어가야한다.
                    -------------------------------------------------------
                    <div class=family>
                        <span class=relation>얀센 접종자</span>
                    </div> 
                    <div class=employee>
                        <span class=relation>얀센 접종자2</span>
                    </div> 
                    -------------------------------------------------------
    -------------------------------------------------------
    <예> var obj = $("div");
    -------------------------------------------------------
        <1> 변수 obj 선언.
        <2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
            이때 JQuery 객체는 div 태그를 가진 태그를 관리한다. 
            만약 div 태그가 2개 이상이면, 정말 2개 이상을 관리한다. 


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<> JQuery 객체의 메소드를 알려주세요
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    너무 많아서 예제 하면서 메소드를 하나씩 작성할 예정.  


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<7> body 태그 안의 모든 태그를 읽어들인 이후 실행하고 싶은 코드가 있다. 
    JQuery 를 이용한다면 어떻게 코딩해야 합니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ------------------------------------------------------------
	$(document).ready(
		function(){
            body 태그 안의 모든 태그를 읽어들인 이후 실행하고 싶은 코드
        }
    )
    ------------------------------------------------------------
    // 현업에서는 이런식으로 행을 줄여서 사용.
    ------------------------------------------------------------
	$(document).ready( function(){
            body 태그 안의 모든 태그를 읽어들인 이후 실행하고 싶은 코드
    })        
    ------------------------------------------------------------


    $(document)  =>  $(document)함수 호출하여 JQuery 객체의 메위주를 얻는 코딩
                     <주의> ready 메소드를 호출하려면 $ 함수 호출 시 매개변수로 
                            선택자를 넘겨주지 말고 Document 객체의 메위주를 넘겨 준다. 
                            Document 객체의 메위주는 document 라는 변수에 저장되어 있다.  
                            document 라는 변수는 개발자가 만드는 변수가 아닌,
                            이미 만들어져 있는 변수이다.


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<8> <input type="button" value="로그인" class="login_btn"> 태그가 
    실행된 결과물인 버튼을 클릭하면 checkForm() 라는 함수를 호출하고 싶으면? 
    즉, 클릭 이벤트를 걸려면?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ------------------------------------------------------------
    $(".login_btn").click(
        function(){
                checkForm();
        }
    );
    ------------------------------------------------------------
    click( 익명함수 )  =>  JQuery 객체가 관리하는 태그에 클릭 이벤트가 발생하면 익명함수 안의 
                          코딩을 실행하라...
    ------------------------------------------------------------
    선택자가 가르키는 태그에 클릭 이벤트가 발생하면 실행구문을 실행하기
    ------------------------------------------------------------
    $("선택자").click(
        function(){
                실행구문
        }
    );
    ------------------------------------------------------------


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<9> 아래 html 태그의 실행 결과에서 웹브라우저에 문자열 입력양식이 출력된다.
    웹브라우저에서 아이디를 입력한 경우 입력된 아이디를 얻기 위한 JQuery 차원 코딩은?

    ------------------------------------------------------------
    <form name=loginForm>
        <input type="text" name="uid" class="uid" size=10>
    </form>
    ------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ------------------------------------------------------------
    <정답1>
    ------------------------------------------------------------
        var uid = $(".uid").val();                      // 권유사항. 
    ------------------------------------------------------------
    <정답2>
    ------------------------------------------------------------
        var uid = $("[name='uid']").val();              // 이렇게도 가능은 하다. 
    ------------------------------------------------------------
    <정답3>
    ------------------------------------------------------------
        var uid = $("[name='loginForm] .uid").val();    // 실무적으로 여러개의 form 태그 있을 때. 정확한 구별.   
    ------------------------------------------------------------
    <정답4>
    ------------------------------------------------------------
        var uid = $("[name='loginForm] [name='uid']").val();        
    ------------------------------------------------------------
    <주의> $("[name='loginForm] .uid") 에서 공백은 후손을 의미한다.
    <주의> $("[name='loginForm] [name='uid']") 에서 공백은 후손을 의미한다.
    ------------------------------------------------------------
    <참고> 될수 있는대로 <정답1> 또는 <정답3> 을 쓰는게 좋다. CSS 설정 시 유리하기 때문이다.  
           선택자는 주로 class 값을 많이 사용한다. 여러 이점이 있기 때문이다. 
    ------------------------------------------------------------

    val( )  =>  JQuery 객체가 관리하는 태그의 value 값을 리턴하는 메소드 

    ------------------------------------------------------------


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<10> $(".xxx").val() 와 $(".xxx").val("") 의 차이점은? 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    --------------------------
     $(".xxx").val()
    --------------------------
        class=xxx 를 가진 태그의 value 값을 리턴하라는 의미.
        <예> var uid = $(".uid").val();
    --------------------------
     $(".xxx").val("") 
    --------------------------
        class=xxx 를 가진 태그의 value 값을 "" 로 세팅하라는 의미.
        <예> $(".uid").val("");

---------------------------------------------------------------------------
> 내가 적어 본 정의
---------------------------------------------------------------------------
$(".xxx").val() 는 class=xxx 의 value 값을 리턴.
---------------------------------------------------------------------------
$(".xxx").val("") 는 class=xxx 의 value 값에 길이가 없는 "" 을 넣어주라는 뜻.  
---------------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<11> JQuery 객체에서 선택자의 종류?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    ----------------------
    $(".xxx")
    ----------------------
        class="xxx" 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기
    ----------------------
    $(".xxx:checked")
    ----------------------
        class="xxx" 가진 태그 중에 체크된 태그를 관리하는 JQuery 객체 메위주 리턴하기  
        체크된 태그는 주로 radio 또는 checkbox 입력양식이다. 
    ----------------------
    $("선택자1 선택자2")     
    ----------------------
        선택자1 이 가르키는 태그의 후손 중에 선택자2가 가르키는 태그를 관리하는 JQuery 객체 메위주 리턴하기 
        ----------------------
        <예> $(".xxx :checked")      // 공백 들어가면? 
        ----------------------
            class="xxx" 가진 태그의 [후손] 중에 체크된 태그를 관리하는 JQuery 객체 메위주 리턴하기
            
    ********************************************
    $("[태그속성명='xxx']")     
    ********************************************
        [태그속성명='xxx'] 을 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기
        <주의> `[` 와 `]` 가 있어야한다.
        ----------------------
        <예> $("[name='mem_id']")      
        ----------------------
            name='mem_id' 을 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기
        ----------------------
        <예> $("[type='radio']")      
        ----------------------
            type='radio' 을 가진 태그, 즉, radio 입력양식 태그를 관리하는 JQuery 객체 메위주 리턴하기

    ********************************************
    $("[태그속성명!='xxx']")     
    ********************************************
        [태그속성명='xxx'] 을 [안가진] 태그를 관리하는 JQuery 객체 메위주 리턴하기
        <주의> `[` 와 `]` 가 있어야한다.
    
    ********************************************
    $("[태그속성명^='xxx']")     
    ********************************************
        태그속성명='xxx~' 으로 [시작]하는 태그를 관리하는 JQuery 객체 메위주 리턴하기
        태그속성명값으로 xxx 로 시작하는 태그를 관리하는 JQuery 객체 메위주 리턴하기.
        ----------------------
        <예> $("[name^='mem_']")      
        ----------------------
            name^='mem ~' 을 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기
            name 속성값이 mem_ 문자로 시작하는 태그를 관리하는 JQuery 객체 메위주 리턴하기.

    ********************************************
    $("[태그속성명$='xxx']")     
    ********************************************
        태그속성명='~xxx' xxx 로 [끝나는] 태그를 관리하는 JQuery 객체 메위주 리턴하기
        태그속성명값으로 xxx 로 끝나는 태그를 관리하는 JQuery 객체 메위주 리턴하기.
        ----------------------
        <예> $("[name$='name']")      
        ----------------------
            name$='~name' 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기  

    ********************************************
    $("[태그속성명*='xxx']")     
    ********************************************
        태그속성값으로 xxx 을 [포함한] 태그를 관리하는 JQuery 객체 리턴   

    ********************************************
    $( "선택자:first" )     
    ********************************************
        선택자가 가리키는 하나이상 태그 중 코딩상 첫번째 태그를 관리하는 JQuery 객체 리턴.  
        ----------------------
        <예> $(".gender:first")      
        ----------------------
            class='gender' 가진 태그 중에 첫번째 태그를 관리하는 JQuery 객체 메위주 리턴하기.  

    ********************************************
    $( "선택자:last" )     
    ********************************************
        선택자가 가리키는 하나이상 태그 중 코딩상 마지막 태그를 관리하는 JQuery 객체 리턴.  
        ----------------------
        <예> $(".gender:last")      
        ---------------------- 
            class='gender' 가진 태그 중에 마지막 태그를 관리하는 JQuery 객체 메위주 리턴하기.  

    ********************************************
    $( "선택자:odd" )     
    ********************************************
        선택자가 가리키는 태그 중에 인덱스 번호가 홀수인 태그를 관리하는 JQuery 객체 리턴.  
        ----------------------
        <예> $(".hobby:odd")      
        ---------------------- 
            <input type="checkbox" name="hobby" class="hobby" value="운동">운동
            <input type="checkbox" name="hobby" class="hobby" value="여행">여행
            <input type="checkbox" name="hobby" class="hobby" value="독서">독서
            <input type="checkbox" name="hobby" class="hobby" value="기타">기타
            --------------------------------------------------------------------
            class='hobby' 가진 태그 중에 인덱스 번호가 홀수인 태그를 관리하는 JQuery 객체 메위주 리턴하기.
            즉, 여행과 기타이다.  

    ********************************************
    $( "선택자:even" )     
    ********************************************
        선택자가 가리키는 태그 중에 인덱스 번호가 짝수인 태그를 관리하는 JQuery 객체 리턴.  
        ----------------------
        <예> $(".hobby:even")      
        ---------------------- 
            <input type="checkbox" name="hobby" class="hobby" value="운동">운동
            <input type="checkbox" name="hobby" class="hobby" value="여행">여행
            <input type="checkbox" name="hobby" class="hobby" value="독서">독서
            <input type="checkbox" name="hobby" class="hobby" value="기타">기타
            --------------------------------------------------------------------
            class='hobby' 가진 태그 중에 인덱스 번호가 짝수인 태그를 관리하는 JQuery 객체 메위주 리턴하기.
            즉, 운동과 독서이다.  

    ********************************************
    $( "선택자:eq(i)" )     
    ********************************************
        선택자가 가리키는 태그 중에 인덱스 번호가 i번째인 태그를 관리하는 JQuery 객체 리턴.  
        i 는 0 부터 시작하는 인덱스 번호가 들어간다.  

    ********************************************
    $( "선택자:first-child" )     
    ********************************************
        선택자가 가리키는 태그 중 각 태그의 부모입장에서 [첫번째] 자식에 해당하는 태그를 관리하는 JQuery 객체 리턴
        -----------------------------------
        <예>
        -----------------------------------
        <table class="student">
            <tr>
                <td>사오정</td>
                <td>대리</td>
                <td>남자</td>
            </tr>
            <tr>
                <td>저팔계</td>
                <td>과장</td>
                <td>여자</td>
            </tr>
        </table>
        -----------------------------------
        $( ".student td:first-child" )
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            그리고 그 td 중에 각 td 의 부모 입장에서 [첫째] 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            결국 <td>사오정</td> 와 <td>저팔계</td> 태그를 관리하는 JQuery 객체 리턴된다. 
        -----------------------------------
        $( ".student td:last-child" )
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            그리고 그 td 중에 각 td 의 부모 입장에서 [마지막] 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            결국 <td>남자</td> 와 <td>여자</td> 태그를 관리하는 JQuery 객체 리턴된다. 
        -----------------------------------
        $( ".student td:nth-child(n)" )   // `n` 은 1번 부터 시작하는 순서번호. i 는 0 부터 시작하는 인덱스.
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            그리고 그 td 중에 각 td 의 부모 입장에서 [n 번째] 자식 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            ex) n 이 2 이면
            <td>대리</td> 와 <td>과장</td> 태그를 관리하는 JQuery 객체 리턴된다. 
        -----------------------------------
        $( ".student td:nth-child(odd)" )
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            그리고 그 td 중에 각 td 의 부모 입장에서 [순서번호가 홀수번째]인 자식 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            결국 <td>사오정</td> 와 <td>저팔계</td>, <td>남자</td>, <td>여자</td>  태그를 관리하는 JQuery 객체 리턴된다. 
        -----------------------------------
        $( ".student td:nth-child(even)" )
        -----------------------------------
            class=student 를 가진 태그의 후손 중에 td를 골라내라
            그리고 그 td 중에 각 td 의 부모 입장에서 [순서번호가 짝수번째]인 자식 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
            결국 <td>대리</td> 와 <td>과장</td>  태그를 관리하는 JQuery 객체 리턴된다. 






■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<12> JQuery 객체 메소드의 종류?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■




















■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<> 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■






■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<> 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■








■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<> 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■























■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<> 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■





